// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SqlTsakDao is the data access object for table mmdm_sql_tsak.
type SqlTsakDao struct {
	Table   string         // Table is the underlying table name of the DAO.
	Group   string         // Group is the database configuration group name of current DAO.
	Columns SqlTsakColumns // Columns contains all the column names of Table for convenient usage.
}

// SqlTsakColumns defines and stores column names for table mmdm_sql_tsak.
type SqlTsakColumns struct {
	Id       string // 自增id
	Name     string // 任务名
	Desc     string // 任务描述
	GroupId  string // 组id
	Sql      string // 需要执行的sql
	CreateAt string // 新增时间
	UpdateAt string // 更新时间
	IsDelete string // 是否删除
}

//  sqlTsakColumns holds the columns for table mmdm_sql_tsak.
var sqlTsakColumns = SqlTsakColumns{
	Id:       "id",
	Name:     "name",
	Desc:     "desc",
	GroupId:  "group_id",
	Sql:      "sql",
	CreateAt: "create_at",
	UpdateAt: "update_at",
	IsDelete: "is_delete",
}

// NewSqlTsakDao creates and returns a new DAO object for table data access.
func NewSqlTsakDao() *SqlTsakDao {
	return &SqlTsakDao{
		Group:   "default",
		Table:   "mmdm_sql_tsak",
		Columns: sqlTsakColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SqlTsakDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SqlTsakDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SqlTsakDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
