// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// DatagroupDao is the data access object for table mmdm_datagroup.
type DatagroupDao struct {
	Table   string           // Table is the underlying table name of the DAO.
	Group   string           // Group is the database configuration group name of current DAO.
	Columns DatagroupColumns // Columns contains all the column names of Table for convenient usage.
}

// DatagroupColumns defines and stores column names for table mmdm_datagroup.
type DatagroupColumns struct {
	Id          string // 自增id
	SourceId    string // 数据源id
	Name        string // 组名
	Prefix      string // 组前缀规则
	GroupConfig string // 组命令执行前的sql
	CreateAt    string // 新增时间
	UpdateAt    string // 更新时间
	IsDelete    string // 是否删除
}

//  datagroupColumns holds the columns for table mmdm_datagroup.
var datagroupColumns = DatagroupColumns{
	Id:          "id",
	SourceId:    "source_id",
	Name:        "name",
	Prefix:      "prefix",
	GroupConfig: "group_config",
	CreateAt:    "create_at",
	UpdateAt:    "update_at",
	IsDelete:    "is_delete",
}

// NewDatagroupDao creates and returns a new DAO object for table data access.
func NewDatagroupDao() *DatagroupDao {
	return &DatagroupDao{
		Group:   "default",
		Table:   "mmdm_datagroup",
		Columns: datagroupColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *DatagroupDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *DatagroupDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *DatagroupDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
